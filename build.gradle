plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.openapi.generator' version '7.0.1'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.1.1'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

	// add swagger-ui dependencies
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.20'
}

tasks.named('test') {
	useJUnitPlatform()
}

openApiGenerate {
	generatorName = "typescript-axios"
	inputSpec = "${rootDir}/src/main/resources/openapi.yaml"
	outputDir = "${rootDir}/backend-sdk"
	apiPackage = "api"
	modelPackage = "models"
	additionalProperties = [
			npmName: "backend-sdk",
			npmVersion: "1.0.0",
			withSeparateModelsAndApi: true,
			useSingleRequestParameter: true
	]
}

task generateSdk(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
	generatorName = "typescript-axios"
	inputSpec = "${rootDir}/src/main/resources/openapi.yaml"
	outputDir = "${rootDir}/backend-sdk"
	apiPackage = "api"
	modelPackage = "models"
	additionalProperties = [
			npmName: "backend-sdk",
			npmVersion: "1.0.0"
	]
}
